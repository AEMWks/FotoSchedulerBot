# .env.example - Template de configuración para el Diario Visual

# ==========================================
# CONFIGURACIÓN DEL BOT DE TELEGRAM
# ==========================================

# Token del bot de Telegram (obtener de @BotFather)
TELEGRAM_BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk

# ID del usuario autorizado (tu ID de Telegram)
# Para obtenerlo: envía un mensaje a @userinfobot
TELEGRAM_USER_ID=123456789

# ==========================================
# CONFIGURACIÓN DE CONTENEDORES
# ==========================================

# Nombre del contenedor del bot
CONTAINER_NAME=nas-photo-bot

# Nombre del contenedor web
WEB_CONTAINER_NAME=photo-diary-web

# ==========================================
# CONFIGURACIÓN DE RUTAS
# ==========================================

# Ruta en el host donde se guardarán las fotos
# IMPORTANTE: Debe ser una ruta absoluta accesible por Docker
HOST_DATA_PATH=/ruta/absoluta/a/tus/fotos

# Ruta interna en los contenedores (NO CAMBIAR)
DATA_PATH=/data/fotos

# ==========================================
# CONFIGURACIÓN WEB
# ==========================================

# Puerto para acceder a la interfaz web
WEB_PORT=8090

# Dominio para la interfaz web (opcional, para HTTPS futuro)
WEB_DOMAIN=localhost

# ==========================================
# CONFIGURACIÓN AVANZADA (OPCIONAL)
# ==========================================

# Zona horaria
TZ=Europe/Madrid

# Configuración de permisos Unix
UMASK=002

# Modo de debug (true/false)
DEBUG_MODE=false

# Configuración de logs
LOG_LEVEL=info

# ==========================================
# CONFIGURACIÓN DE LÍMITES
# ==========================================

# Tamaño máximo de archivo en MB
MAX_FILE_SIZE_MB=20

# Duración máxima de video en segundos
MAX_VIDEO_DURATION_SECONDS=20

# Resolución mínima para fotos (ancho x alto)
MIN_PHOTO_WIDTH=1920
MIN_PHOTO_HEIGHT=1080

# ==========================================
# CONFIGURACIÓN DE NOTIFICACIONES
# ==========================================

# Número mínimo de notificaciones por día
MIN_NOTIFICATIONS_PER_DAY=5

# Número máximo de notificaciones por día
MAX_NOTIFICATIONS_PER_DAY=9

# Hora de inicio de notificaciones (formato 24h)
NOTIFICATIONS_START_HOUR=8

# Hora de fin de notificaciones (formato 24h)
NOTIFICATIONS_END_HOUR=21

# ==========================================
# CONFIGURACIÓN DE BASE DE DATOS (FUTURO)
# ==========================================

# Configuración para base de datos futura
# DB_HOST=localhost
# DB_PORT=5432
# DB_NAME=photo_diary
# DB_USER=photo_user
# DB_PASSWORD=secure_password

# ==========================================
# CONFIGURACIÓN DE BACKUP (FUTURO)
# ==========================================

# Ruta para backups automáticos
# BACKUP_PATH=/ruta/a/backups

# Retención de backups en días
# BACKUP_RETENTION_DAYS=30

# ==========================================
# CONFIGURACIÓN DE NOTIFICACIONES EXTERNAS (FUTURO)
# ==========================================

# Configuración para notificaciones email (futuro)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=tu_email@gmail.com
# SMTP_PASSWORD=tu_app_password

# Configuración para webhook de notificaciones (futuro)
# WEBHOOK_URL=https://hooks.slack.com/services/...

# ==========================================
# CONFIGURACIÓN DE SEGURIDAD (FUTURO)
# ==========================================

# Clave secreta para JWT (generar aleatoria)
# JWT_SECRET=tu_clave_secreta_muy_larga_y_segura

# Configuración para HTTPS
# SSL_CERT_PATH=/path/to/cert.pem
# SSL_KEY_PATH=/path/to/key.pem

# ==========================================
# CONFIGURACIÓN DE RENDIMIENTO
# ==========================================

# Configuración de memoria para PHP
PHP_MEMORY_LIMIT=256M

# Configuración de upload para PHP
PHP_MAX_UPLOAD_SIZE=25M
PHP_MAX_POST_SIZE=25M

# ==========================================
# EJEMPLO DE CONFIGURACIÓN COMPLETA
# ==========================================

# Descomenta y modifica estas líneas para un setup completo:

# # Bot de Telegram
# TELEGRAM_BOT_TOKEN=1234567890:ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijk
# TELEGRAM_USER_ID=123456789

# # Rutas (AJUSTAR SEGÚN TU SISTEMA)
# HOST_DATA_PATH=/home/usuario/fotos-diario
# # En Windows: HOST_DATA_PATH=C:/Users/Usuario/fotos-diario
# # En macOS: HOST_DATA_PATH=/Users/usuario/fotos-diario

# # Contenedores
# CONTAINER_NAME=mi-diario-bot
# WEB_CONTAINER_NAME=mi-diario-web
# WEB_PORT=8090

# # Configuración básica
# TZ=Europe/Madrid
# DEBUG_MODE=false

# ==========================================
# NOTAS IMPORTANTES
# ==========================================

# 1. NUNCA subas este archivo .env al repositorio git
# 2. La ruta HOST_DATA_PATH debe existir y ser escribible
# 3. El bot necesita permisos para escribir en HOST_DATA_PATH
# 4. Para Windows, usa barras invertidas o escapa las rutas
# 5. El puerto WEB_PORT debe estar libre en tu sistema

# ==========================================
# VERIFICACIÓN RÁPIDA
# ==========================================

# Para verificar que tu configuración es correcta:
# 1. docker-compose config (verificar sintaxis)
# 2. docker-compose up --dry-run (verificar configuración)
# 3. Verificar que HOST_DATA_PATH existe: ls -la $HOST_DATA_PATH
# 4. Verificar permisos: touch $HOST_DATA_PATH/test.txt && rm $HOST_DATA_PATH/test.txt

# ==========================================
# SOLUCIÓN DE PROBLEMAS COMUNES
# ==========================================

# Problema: "Permission denied" al escribir fotos
# Solución: sudo chown -R 33:33 $HOST_DATA_PATH && sudo chmod -R 775 $HOST_DATA_PATH

# Problema: Bot no responde
# Solución: Verificar TELEGRAM_BOT_TOKEN con @BotFather

# Problema: No recibo notificaciones
# Solución: Verificar TELEGRAM_USER_ID enviando mensaje a @userinfobot

# Problema: Puerto ocupado
# Solución: Cambiar WEB_PORT o detener servicio: sudo lsof -i :8090

# Problema: Contenedor no inicia
# Solución: docker-compose logs CONTAINER_NAME

# ==========================================
# COMANDOS ÚTILES
# ==========================================

# Iniciar servicios:
# docker-compose up -d

# Ver logs del bot:
# docker-compose logs -f nas-photo-bot

# Ver logs del web:
# docker-compose logs -f photo-diary-web

# Reiniciar solo el bot:
# docker-compose restart nas-photo-bot

# Limpiar y reconstruir:
# docker-compose down && docker-compose build && docker-compose up -d

# Backup de configuración:
# cp .env .env.backup.$(date +%Y%m%d)

# ==========================================
# PERSONALIZACIÓN AVANZADA
# ==========================================

# Variables adicionales para personalización:

# Configuración de interfaz
# THEME_DEFAULT=light
# LANGUAGE=es
# DATE_FORMAT=DD/MM/YYYY

# Configuración de calidad de imagen
# IMAGE_QUALITY=95
# VIDEO_COMPRESSION=medium

# Configuración de notificaciones
# NOTIFICATION_SOUND=true
# QUIET_HOURS_START=22
# QUIET_HOURS_END=7

# Configuración de análisis
# ANALYTICS_ENABLED=true
# FACE_DETECTION_ENABLED=false
# LOCATION_TAGGING_ENABLED=false

# ==========================================
# CONFIGURACIÓN POR ENTORNO
# ==========================================

# Desarrollo local:
# DEBUG_MODE=true
# LOG_LEVEL=debug
# WEB_PORT=3000

# Producción:
# DEBUG_MODE=false
# LOG_LEVEL=warn
# WEB_PORT=80

# Testing:
# DEBUG_MODE=true
# LOG_LEVEL=debug
# TELEGRAM_BOT_TOKEN=test_token
# WEB_PORT=8091
